// Generated by CoffeeScript 1.3.1
(function() {
  var bindHand, cardFile, chooseTrumps, getState, join, joined, move, playerID, player_name, renderHand, renderState, renderTable, socket, state, _state;

  socket = io.connect('/');

  playerID = null;

  _state = null;

  joined = false;

  socket.on('start', function(data) {
    console.log('state received', data);
    return _state = data.state;
  });

  socket.on('state', function(data) {
    var _ref;
    console.log('state update', data);
    _state = data.state;
    if (((_ref = data.state.expectedTurn) != null ? _ref.playerID : void 0) === playerID) {
      console.log('it is your turn');
      if (data.state.expectedTurn.type === "trumps") {
        chooseTrumps();
      }
    }
    if (_state.hand) {
      renderHand(_state.hand);
    }
    renderTable(_state.table);
    bindHand();
    renderTable;

  });

  socket.on('join', function(data) {
    console.log('player joined', data);
    if (data.isme) {
      playerID = data.playerID;
      joined = true;
    }
    return socket.emit('state');
  });

  socket.on('move', function(data) {
    return console.log('move made', data);
  });

  socket.on('gameStart', function() {
    return socket.emit('state');
  });

  socket.on('end', function() {
    console.log("Game over");
    return socket.emit('state');
  });

  socket.on('update', function() {
    return socket.emit('state');
  });

  join = function(ID) {
    if (joined) {
      return;
    }
    playerID = ID;
    return socket.emit('join', {
      playerID: ID
    });
  };

  getState = function() {
    return socket.emit('state');
  };

  move = function(move) {
    move.playerID = playerID;
    return socket.emit('move', move);
  };

  state = function() {
    return _state;
  };

  player_name = function() {
    return playerID;
  };

  cardFile = function(card) {
    var filename, n, suit_n;
    n = (function() {
      switch (card.number) {
        case "A":
          return 1;
        case "K":
          return 2;
        case "Q":
          return 3;
        case "J":
          return 4;
        case "10":
          return 5;
        case "9":
          return 6;
        case "8":
          return 7;
        case "7":
          return 8;
        case "6":
          return 9;
        case "5":
          return 10;
        case "4":
          return 11;
        case "3":
          return 12;
        case "2":
          return 13;
      }
    })();
    suit_n = (function() {
      switch (card.suit) {
        case "C":
          return 1;
        case "S":
          return 2;
        case "H":
          return 3;
        case "D":
          return 4;
      }
    })();
    return filename = 'cards/' + ((4 * (n - 1)) + suit_n) + '.png';
  };

  $().ready(function() {
    var filename, n, suit, _i, _results;
    $('input#join').bind('click', function() {
      return join($('input#name').val());
    });
    $('input#bid').bind('click', function() {
      var value;
      value = $('input#bid_value').val() - 0;
      return move({
        type: "bid",
        value: value
      });
    });
    $('input#play_card').bind('click', function() {
      var card, number, suit;
      number = $('input#card_number').val();
      suit = $('input#card_suit').val();
      card = {
        number: number,
        suit: suit,
        owner: playerID
      };
      return move({
        type: "card",
        value: card
      });
    });
    $('#trumps').css('display', 'none');
    _results = [];
    for (n = _i = 1; _i <= 4; n = ++_i) {
      filename = 'cards/' + n + '.png';
      suit = ["C", "S", "H", "D"][n - 1];
      _results.push($('#trumps').append('<img class="trumpschoice" id="' + suit + '" src="' + filename + '"></img>'));
    }
    return _results;
  });

  chooseTrumps = function() {
    $('.trumpschoice').each(function() {
      return $(this).bind('click', function() {
        var suit;
        suit = $(this).attr('id');
        move({
          type: "trumps",
          value: suit
        });
        return $('#trumps').css('display', 'none');
      });
    });
    return $('#trumps').css('display', '');
  };

  bindHand = function() {
    return $('.hand').each(function() {
      return $(this).bind('click', function() {
        var card, cardName, number, suit;
        cardName = $(this).attr('id');
        suit = cardName[0];
        number = cardName.slice(1, cardName.length);
        card = {
          number: number,
          suit: suit,
          owner: playerID
        };
        return move({
          type: "card",
          value: card
        });
      });
    });
  };

  renderHand = function(hand) {
    var c, cardName, f, _i, _len, _results;
    $('#hand').empty();
    _results = [];
    for (_i = 0, _len = hand.length; _i < _len; _i++) {
      c = hand[_i];
      f = cardFile(c);
      cardName = c.suit + c.number;
      _results.push($('#hand').append('<img src="' + f + '" class="hand" id="' + cardName + '"></img>'));
    }
    return _results;
  };

  renderTable = function(table) {
    var c, f, _i, _len, _results;
    $('#table').empty();
    _results = [];
    for (_i = 0, _len = table.length; _i < _len; _i++) {
      c = table[_i];
      f = cardFile(c);
      _results.push($('#table').append('<img src="' + f + '"></img>'));
    }
    return _results;
  };

  renderState = function() {
    var i, name, obj, p, players, score, table, template, tricks, turn, _i, _len, _ref, _ref1, _ref2;
    players = [];
    _ref = _state.players;
    for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {
      p = _ref[i];
      if (_state.expectedTurn.playerID === p) {
        turn = true;
      } else {
        turn = false;
      }
      name = p;
      tricks = ((_ref1 = _state.tricks[_state.round - 1]) != null ? _ref1[p] : void 0) || 0;
      score = ((_ref2 = _state.score[_state.round - 1]) != null ? _ref2[p] : void 0) || 0;
      turn = turn;
      obj = {
        name: name,
        tricks: tricks,
        score: score,
        turn: turn
      };
      players.push(obj);
    }
    template = $('#state_template').html();
    table = _.template(template, players);
    return $('#state.').html(table);
  };

  window.playerID = player_name;

  window.state = state;

  window.join = join;

  window.getState = getState;

  window.move = move;

}).call(this);
